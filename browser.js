// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
var e,t;e=this,t=function(){"use strict";var e="function"==typeof Object.defineProperty?Object.defineProperty:null,t=function(){try{return e({},"x",{}),!0}catch(e){return!1}},r=Object.defineProperty,n=Object.prototype,o=n.toString,i=n.__defineGetter__,u=n.__defineSetter__,l=n.__lookupGetter__,a=n.__lookupSetter__,c=r,f=function(e,t,r){var c,f,p,y;if("object"!=typeof e||null===e||"[object Array]"===o.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof r||null===r||"[object Array]"===o.call(r))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+r+"`.");if((f="value"in r)&&(l.call(e,t)||a.call(e,t)?(c=e.__proto__,e.__proto__=n,delete e[t],e[t]=r.value,e.__proto__=c):e[t]=r.value),p="get"in r,y="set"in r,f&&(p||y))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return p&&i&&i.call(e,t,r.get),y&&u&&u.call(e,t,r.set),e},p=t()?c:f,y=function(e,t,r){p(e,t,{configurable:!1,enumerable:!1,writable:!1,value:r})},s=function(e){return"string"==typeof e},b="function"==typeof Symbol&&"symbol"==typeof Symbol("foo"),d=function(){return b&&"symbol"==typeof Symbol.toStringTag},_=Object.prototype.toString,m=_,v=function(e){return m.call(e)},g=Object.prototype.hasOwnProperty,j=function(e,t){return null!=e&&g.call(e,t)},w="function"==typeof Symbol?Symbol.toStringTag:"",S=j,h=w,O=_,P=v,T=function(e){var t,r,n;if(null==e)return O.call(e);r=e[h],t=S(e,h);try{e[h]=void 0}catch(t){return O.call(e)}return n=O.call(e),t?e[h]=r:delete e[h],n},E=d()?T:P,V=String.prototype.valueOf,x=E,C=function(e){try{return V.call(e),!0}catch(e){return!1}},k=d(),A=function(e){return"object"==typeof e&&(e instanceof String||(k?C(e):"[object String]"===x(e)))},G=s,M=A,U=y,F=function(e){return G(e)||M(e)},L=A;U(F,"isPrimitive",s),U(F,"isObject",L);var q=F,z=q.isPrimitive,B=function(e){if(!z(e))throw new TypeError("invalid argument. Must provide a primitive string. Value: `"+e+"`.");return e.toLowerCase()},D=q.isPrimitive,H=function(e){if(!D(e))throw new TypeError("invalid argument. Must provide a primitive string. Value: `"+e+"`.");return e.toUpperCase()};return function(e){return q.isPrimitive(e)&&e===H(e)&&e!==B(e)}},"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).isUppercase=t();
//# sourceMappingURL=browser.js.map
